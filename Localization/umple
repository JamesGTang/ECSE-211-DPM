class Display
{
    isA Runnable;
TextLCD lcd;
  double[] position;
  int DISPLAY_PERIOD;
  0..* -- 1 TextLCD;
  * -- * Lab4;
}

class Runnable
{
}

class TextLCD
{
}

class EV3ColorSensor{

}

class LightLocalizer{
   float[] color;
    static final int BLACK_THRESHOLD;
   final float lightVal=100;
  double dX;
  double dY;
}

class UltrasonicLocalizer{
     
  int dist;
  double maxD;
  double OFFSET_CONST;
    double COR_OFFSET;
  double MOTOR_OFFSET;
  double lAngle;
  double rAngle;
  int xBefore;
    double xAfter;

} 

class Util{

}
class Robot{
  EV3LargeRegulatedMotor leftMotor;
  EV3LargeRegulatedMotor rightMotor;
  EV3LargeRegulatedMotor usMotor;
  EV3UltrasonicSensor usSensor;
  static SampleProvider usDistance;
  EV3ColorSensor colorSensor;
  SampleProvider colorProvider;
  UltrasonicController usController;
  TextLCD lcd;
  float[] usData;
  SampleProvider usDistance;
  final int FORWARD_SPEED;
  double WHEEL_RAD;
  double TRACK;
  final double TILE_SIZE;
  static double lsOffset;
  int usMotorAngle;
  static double OFF_CONST;
   
} 

class Lab4
{

  int[] xPos;
  int[] yPos;
  Odometer odometer;
  * -- * Odometer;
}

class SampleProvider
{
  1 -- 1 UltrasonicController;
}

class UltrasonicController
{
}

class Odometer
{
  1 -- 1 OdometerData;
  1 -- 0..* OdometerExcelption;
  1 -- * OdometerDisplay;
}

class OdometerDisplay
{
}

class EV3UltrasonicSensor
{
  * -- 1 UltrasonicPoller;
}

class Navigation
{
    isA Thread;
int FORWARD_SPEED;
  int ROTATE_SPEED;
  double TILE_SIZE;
  int ODOMETER_PERIOD;
  double xCurrent;
double yCurrent;
double thetaCurrent;
boolean isFinished;
  1 -- 1 UltrasonicController;
  * -- * Odometer;
static double OFF_CONST;
}

class NavigationAvoid
{
    isA Thread;
int FORWARD_SPEED;
  int ROTATE_SPEED;
  double TILE_SIZE;
  int ODOMETER_PERIOD;
  double xCurrent;
double yCurrent;
double thetaCurrent;
boolean isFinished;
int xDirCompensation;
boolean isAvoided;
static double OFF_CONST;
  1 -- 1 UltrasonicController;
  * -- * Odometer;
}


class Thread
{
}

class OdometerData
{
  double x;
  double y;
  doule theta;
  int numberOfIsntances;
  int maxInstances;
}

class OdometerExcelption
{
}

class UltrasonicPoller
{
}